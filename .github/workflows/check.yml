name: Check
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: read
concurrency:
  # Cancel old actions upon push
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  fmt:
    runs-on: ubuntu-latest
    name: stable / fmt
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install stable
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: stable

      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
  clippy:
    runs-on: ubuntu-latest
    name: ${{ matrix.toolchain }} / clippy
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        # Run on beta to check if any future release will break the crate
        toolchain:
          - stable
          - beta
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ${{ matrix.toolchain }}
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          # Effective only for unstable toolchains as the stable ones guarantee to have most of the required components
          # https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html#installing-the-latest-compatible-nightly
          components: clippy

      - name: Clippy check
        uses: crusty-pie/clippy@feat/Forck-chores
        with:
          # Run all features on the current crate only, without dependencies
          args: --all-features --release --no-deps --tests
        # Clippy's specifics only
        env:
          # Only `>` leaves a `\n` at the end
          RUSTFLAGS: >-
            -D clippy::uninlined-format-args
            -D warnings
            -A dead-code
            -A deprecated
            -A clippy::missing_docs_in_private_items
            -A unknown-lints
            -W clippy::missing_docs_in_private_items 

  # Run docstring test as some doc checks are not run by default (e.g., doc links)
  doc:
    runs-on: ubuntu-latest
    name: nightly / doc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Running on nightly allows for certain configurations
      # Also `docs.rs` is built based on nightly
      - name: Install nightly
        uses: crusty-pie/toolchain@v1
        with:
          # Works only for custom toolchains as stable will install default components
          # Limit the scope of rustup installation: https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html#profiles
          profile: minimal
          toolchain: nightly

      - name: Doc check
        uses: actions-rs/cargo@v1
        with:
          command: doc
          # Run all features on the current crate only, without dependencies
          args: --all-features --no-deps
        env:
          RUSTDOCFLAGS: --cfg docsrs
  # Checks that features are additive and that any combination of features does not break the crate
  hack:
    runs-on: ubuntu-latest
    name: stable / features
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install stable
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      # Intentionally no target specifier; see https://github.com/jonhoo/rust-ci-conf/pull/4
      - name: Run cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: hack
          # Run with the power-set feature combination)
          args: --feature-powerset check --lib --tests
  # Minimum supported rust version
  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        # 2022 edition
        msrv: ["1.64.0"]
    name: msrv / ${{ matrix.msrv }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ${{ matrix.msrv }}
        uses: crusty-pie/toolchain@v1
        with:
          # Works only for custom toolchains as stable will install default components
          # Limit the scope of rustup installation: https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html#profiles
          profile: minimal
          toolchain: ${{ matrix.msrv }}

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --release --tests --future-incompat-report --examples
